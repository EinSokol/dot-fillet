plugin {
  hy3 {
    # disable gaps when only one window is onscreen
    # 0 - always show gaps
    # 1 - hide gaps with a single window onscreen
    # 2 - 1 but also show the window border
    no_gaps_when_only = 0 # <int> default: 0

    # policy controlling what happens when a node is removed from a group,
    # leaving only a group
    # 0 = remove the nested group
    # 1 = keep the nested group
    # 2 = keep the nested group only if its parent is a tab group
    node_collapse_policy = 2 # <int> default: 2

    # offset from group split direction when only one window is in a group
    group_inset = 10 # <int> default: 10

    # if a tab group will automatically be created for the first window spawned in a workspace
    tab_first_window = false # <bool>

    # tab group settings
    tabs {
      # height of the tab bar
      height = 22 # <int> default: 22

      # padding between the tab bar and its focused node
      padding = 6 # <int> default: 6

      # the tab bar should animate in/out from the top instead of below the window
      from_top = false # <bool> default: false

      # radius of tab bar corners
      radius = 6 # <int> default: 6

      # tab bar border width
      border_width = 2 # <int> default: 2

      # render the window title on the bar
      render_text = true # <bool> default: true

      # center the window title
      text_center = true # <bool> default: true

      # font to render the window title with
      text_font = Fira Code # <string> default: Sans

      # height of the window title
      text_height = 8 # <int> default: 8

      # left padding of the window title
      text_padding = 3 # <int> default: 3

      # active tab bar segment colors
      col.active = rgba(33ccff40) # default: rgba(33ccff40)
      col.active.border = rgba(33ccffee) # default: rgba(33ccffee)
      col.active.text = rgba(ffffffff) # default: rgba(ffffffff)

      # focused tab bar segment colors (focused node in unfocused container)
      col.focused = rgba(60606040) # default: rgba(60606040)
      col.focused.border = rgba(808080ee) # default: rgba(808080ee)
      col.focused.text = rgba(ffffffff) # default: rgba(ffffffff)

      # inactive tab bar segment colors
      col.inactive = rgba(30303020) # default: rgba(30303020)
      col.inactive.border = rgba(606060aa) # default: rgba(606060aa)
      col.inactive.text = rgba(ffffffff) # default: rgba(ffffffff)

      # urgent tab bar segment colors
      col.urgent = rgba(ff223340) # default: rgba(ff223340)
      col.urgent.border = rgba(ff2233ee) # default: rgba(ff2233ee)
      col.urgent.text = rgba(ffffffff) # default: rgba(ffffffff)

      # urgent tab bar segment colors
      col.locked = rgba(90903340) # default: rgba(90903340)
      col.locked.border = rgba(909033ee) # default: rgba(909033ee)
      col.locked.text = rgba(ffffffff) # default: rgba(ffffffff)

      # if tab backgrounds should be blurred
      # Blur is only visible when the above colors are not opaque.
      blur = true # <bool> default: true

      # opacity multiplier for tabs
      # Applies to blur as well as the given colors.
      opacity = 1.0 # <bool> default: 1.0
    }

    # autotiling settings
    autotile {
      # enable autotile
      enable = true # <bool> default: false

      # make autotile-created groups ephemeral
      ephemeral_groups = true # <bool> default: true

      # if a window would be squished smaller than this width, a vertical split will be created
      # -1 = never automatically split vertically
      # 0 = always automatically split vertically
      # <number> = pixel width to split at
      trigger_width = 0 # <int> default: 0

      # if a window would be squished smaller than this height, a horizontal split will be created
      # -1 = never automatically split horizontally
      # 0 = always automatically split horizontally
      # <number> = pixel height to split at
      trigger_height = 0 # <int> default: 0

      # a space or comma separated list of workspace ids where autotile should be enabled
      # it's possible to create an exception rule by prefixing the definition with "not:"
      # workspaces = 1,2 # autotiling will only be enabled on workspaces 1 and 2
      # workspaces = not:1,2 # autotiling will be enabled on all workspaces except 1 and 2
      workspaces = all # <string> default: all
    }
  }
}


###################
### DISPATCHERS ###
###################

# hy3:makegroup, <h | v | opposite | tab>, [toggle], [ephemeral | force_ephemeral] - make a vertical / horizontal split or tab group
# toggle - if the focused node is the only child of its parent, which is of the type specified, the node's parent will be removed.
# ephemeral - the group will be removed once it contains only one node. does not affect existing groups.
# force_ephemeral - same as ephemeral, but converts existing single windows groups.

# hy3:changegroup, <h | v | tab | untab | toggletab | opposite> - change the group the node belongs to, to a different layout
# untab will untab the group if it was previously tabbed
# toggletab will untab if group is tabbed, and tab if group is untabbed
# opposite will toggle between horizontal and vertical layouts if the group is not tabbed.

# hy3:setephemeral, <true | false> - change the ephemerality of the group the node belongs to

# hy3:movefocus, <l | u | d | r | left | down | up | right>, [visible], [warp | nowarp] - move the focus left, up, down, or right
# visible - only move between visible nodes, not hidden tabs
# warp - warp the mouse to the selected window, even if general:no_cursor_warps is true.
# nowarp - does not warp the mouse to the selected window, even if general:no_cursor_warps is false.

# hy3:warpcursor - warp the cursor to the center of the focused node

# hy3:movewindow, <l | u | d | r | left | down | up | right>, [once], [visible] - move a window left, up, down, or right
# once - only move directly to the neighboring group, without moving into any of its subgroups
# visible - only move between visible nodes, not hidden tabs

# hy3:movetoworkspace, <workspace>, [follow, [warp | nowarp]] - move the active node to the given workspace
# follow - change focus to the given workspace when moving the selected node
# warp - warp the mouse to the selected window, even if general:no_cursor_warps is true.
# nowarp - does not warp the mouse to the selected window, even if general:no_cursor_warps is false.

# hy3:killactive - close all windows in the focused node

# hy3:changefocus, <top | bottom | raise | lower | tab | tabnode>
# top - focus all nodes in the workspace
# bottom - focus the single root selection window
# raise - raise focus one level
# lower - lower focus one level
# tab - raise focus to the nearest tab
# tabnode - raise focus to the nearest node under the tab

# hy3:togglefocuslayer, [nowarp] - toggle focus between tiled and floating layers
# nowarp - do not warp the mouse to the newly focused window

# hy3:focustab, [l | r | left | right | index, <index>], [prioritize_hovered | require_hovered], [wrap]
# l | r | left | right - direction to change focus towards
# index, <index> - select the indexth tab
# prioritize_hovered - prioritize the tab group under the mouse when multiple are stacked. use the lowest group if none is under the mouse.
# require_hovered - affect the tab group under the mouse. do nothing if none are hovered.
# wrap - wrap to the opposite size of the tab bar if moving off the end

# hy3:locktab, [lock | unlock] - lock the current tab, makingg it behave like a node

# hy3:debugnodes - print the node tree into the hyprland log

# ⚠️ ALPHA QUALITY hy3:setswallow, <true | false | toggle> - set the containing node's window swallow state

# ⚠️ ALPHA QUALITY hy3:expand, <expand | shrink | base> - expand the current node to cover other nodes
# expand - expand by one node
# shrink - shrink by one node
# base - undo all expansions
